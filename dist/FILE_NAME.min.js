/*! PROJECT_NAME - v0.1.0 - 2013-04-11
* http://PROJECT_WEBSITE/
* Copyright (c) 2013 YOUR_NAME; Licensed MIT */
var App=new Backbone.Marionette.Application;AppController={index:function(){console.log("index triggered"),App.Midi.ready.add(function(){console.log("index resolving"),App.Puts.Main()})},other:function(){console.log("other triggered")}},Router=Backbone.Marionette.AppRouter.extend({appRoutes:{"":"index",other:"other"},controller:AppController}),App.bind("initialize:after",function(){new Router,Backbone.history&&!this.debug});var App=new Backbone.Marionette.Application;App.module("Puts",function(e){App.addInitializer(function(){}),App.vent.bindTo("",function(){}),App.Puts.Main=function(){App.Midi.ready.add(function(){InputsView=new e.InputsView({collection:App.Midi.Inputs}),OutputsView=new e.InputsView({collection:App.Midi.Outputs}),App.addRegions({SideBarRegion:"#sidebar",MainRegion:"#main"}),App.MainRegion.show(OutputsView),App.SideBarRegion.show(InputsView);var t=App.Midi.Inputs.where({name:"AXIS-49 2A",type:"input"}),n=App.Midi.Inputs.where({name:"AXIS-49 USB Keyboard",type:"input"}),i=App.Midi.Inputs.where({name:"QUNEO",type:"input"});console.log("USB",n.length);var o=t.concat(n);console.log("axis length",o.length),Loopmidi=App.Midi.Outputs.where({name:"loopMIDI Port"})[0],Loopmidi1=App.Midi.Outputs.where({name:"loopMIDI Port 1"})[0],Loopmidi2=App.Midi.Outputs.where({name:"loopMIDI Port 2"})[0],Loopmidi3=App.Midi.Outputs.where({name:"loopMIDI Port 3"})[0],Loopmidi.addInput(o[0]),Loopmidi1.addInput(o[1]),Loopmidi2.addInput(o[2]),Loopmidi3.addInput(i[0])})}}),App.start(),App.module("JsPlumb",function(){App.addInitializer(function(){}),App.vent.bindTo("",function(){})}),App.module("Midi",function(e){e.Input=Backbone.Model.extend({defaults:{title:"Input",text:"nothing here yet"},initialize:function(){this.stream=Bacon.fromEventTarget(this.get("device"),"midimessage"),this.stream.onValue(function(e){console.log(""+e)})},urlRoot:"urlroot",idAttribute:"_id",addConnection:function(e){console.log(this.get("id")),console.log(e.get("id")),midiBridge.addConnection(this.get("id"),e.get("id")),this.set({connectedto:e}),console.log("connected "+this.get("name")+" to "+e.get("name"))}}),e.InputCollection=Backbone.Collection.extend({model:e.Input,initialize:function(){this.on("add",function(){})}})}),App.module("Midi",function(e){e.Output=Backbone.Model.extend({defaults:{title:"Output",text:"nothing here yet"},initialize:function(){_.bind(this.addInput,this),_.bind(this.sendMIDIMessage,this)},urlRoot:"urlroot",idAttribute:"_id",addInput:function(e){console.log("adding connection..."),console.log(this.get("id")),console.log(e.get("id")),this.set({input:e});var t=this;e.stream.onValue(function(e){t.sendMIDIMessage(e),console.log("out :",""+e)})},sendMIDIMessage:function(t){device=e.MIDIAccess.getOutput(e.MIDIAccess.enumerateOutputs()[this.get("index")]),device.sendMIDIMessage(t)}}),e.OutputCollection=Backbone.Collection.extend({model:e.Output,initialize:function(){this.on("add",function(){})}})}),App.module("Puts",function(e){e.Input=Backbone.Model.extend({defaults:{title:"Input",text:"nothing here yet"},initialize:function(){this.stream=Bacon.fromEventTarget(this.get("device"),"midimessage"),stream.onValue(function(e){console.log(""+e)})},urlRoot:"urlroot",idAttribute:"_id",addConnection:function(e){console.log(this.get("id")),console.log(e.get("id")),midiBridge.addConnection(this.get("id"),e.get("id")),this.set({connectedto:e}),console.log("connected "+this.get("name")+" to "+e.get("name"))}}),e.InputCollection=Backbone.Collection.extend({model:e.Input,initialize:function(){this.on("add",function(){})}})}),App.module("Puts",function(e){e.InputView=Backbone.Marionette.ItemView.extend({tagName:"div",className:"view",initialize:function(){this.model.bind("change",this.render,this)},template:"#view",events:{},onRender:function(){}}),e.InputsView=Backbone.Marionette.CollectionView.extend({itemView:e.InputView})});